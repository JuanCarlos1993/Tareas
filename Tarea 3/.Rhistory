x <- rnorm(100)
hist(x)
x <- rnorm(100)
hist(x)
x <- rnorm(100)
hist(x)
x <- rnorm(100)
hist(x)
install.packages("devtools")
library(devtools)
find_rtools()
knitr(install.packages("knitr"))
install.packages("knitr")
(10+15)^2
?mean
example(mean)
?median
example(mean)
1 / Inf
pi
0 / 0
x  <- c(1,2,3,4,5,6)
x
xm
ls()
rm(xm)
x
rm(x)
x
1:6
x <- c(1,2,3,4,5,6)
x
seq(2,20,2)
vector.character <- c("Marisol", "Aurora", "Akira", "Ximena")
class(vector.character)
vector.character
class(c(2.718282, TRUE))
z <- -2:2
z
class(z)
class(as.numeric(z))
seq(1,2,0.1)
as.character
as.character(z)
nombres  <- c("Ignacio", "Rubí", "César")
as.numeric(nombres)
ector.sexo.personas  <- factor(c("fem", "masc", "masc", "fem", "masc"))
vector.sexo.personas  <- factor(c("fem", "masc", "masc", "fem", "masc"))
str(vector.sexo.personas  <- factor(c("fem", "masc", "masc", "fem", "masc")))
table(vector.sexo.personas)
vector.sexo.personas[1]
vector.sexo.personas[5]
vector.sexo.personas[-5]
vector.sexo.personas[2] <- "fem"
vector.sexo.personas
m <- 1:15
m
dim(m) <- c(3,5)
m
matriz <- matrix(1:15, nrow = 3, ncol = 5, byrow = TRUE)
matriz
atriz <- matrix(1:15, nrow = 3, ncol = 5, byrow = FALSE)
atriz
m[2,3]
m[3]
m[,3]
?matrix
v.1  <- -(30:28)
v.1
v.2 <- 14:16
v.2
cbind(v.1, v.2)
cbind(v.1, v.2)
x <- list(pi, "Mauricio", 15 + 35i)
x
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x
x$foo
x$bar
x <- 15:17
names(x)
names(x) <- c("var.1", "var.2", "var3")
x
library(datasets)
data(iris)
str
str(library(datasets))
str(data(iris))
ls()
getwd()
library(datasets)
data(iris)
?iris
?library
?datasets
library(help = "datasets").
library(help = "datasets")
str()
str(iris)
class(iris)
sapply(iris)
?sapply
lapply(iris)
cosh(0)
class(20)
class(20L)
complex(real = 2, imaginary = 1)
complex(real = 2)
vector.complex <- c(2 + 100i, 3.5 + 15i)
class(vector.complex)
vector.complex
class(iris)
is.na(iris)
?sapply
vector.sexo.personas  <- factor(c("fem", "masc", "masc", "fem", "masc"))
str(vector.sexo.personas)
attributes(vector.sexo.personas)
vector.sexo.personas[2] <- "mujer"
sapply(iris, class)
cuadratica(a = 3, b = -1 , c = -2)
cuadratica  <- function(a,b,c){
if(((b^2)-4*a*c)>0){
x1 <- (-b+sqrt((b^2)-4*a*c))/(2*a)
x2 <- (-b-sqrt((b^2)-4*a*c))/(2*a)
return(c(x1,x2))
} else if(((b^2)-4*a*c)==0){
x1 <- (-b/(2*a))
x2 <- (-b/(2*a))
return(c(x1,x2))
} else
print("No existe solucion en los reales")
}
cuadratica(a = 3, b = -1 , c = -2)
anualidad <- function(n,i,P=1,Vencida=TRUE){
s <- 0
for(j in 1:n){
x1 <- ((1/(1+i))^j)
s <- x1+s
}
x2 <- P*s
if(Vencida==TRUE){
return(x2)
} else{
x3 <- x2*(1+i)
return(x3)
}
}
anualidad(n = 15, i = 0.035, P = 5000, Vencida = FALSE)
?option
?digits
anualidad <- function(n,i,P=1,Vencida=TRUE){
s <- 0
for(j in 1:n){
x1 <- ((1/(1+i))^j)
s <- x1+s
}
x2 <- P*s
if(Vencida==TRUE){
return(round(x2,digits=2))
} else{
x3 <- x2*(1+i)
return(round(x3,digits=2))
}
}
anualidad(n = 15, i = 0.035, P = 5000, Vencida = FALSE)
?option
?round
anualidad <- function(n,i,P=1,Vencida=TRUE){
s <- 0
for(j in 1:n){
x1 <- ((1/(1+i))^j)
s <- x1+s
}
x2 <- P*s
round(x2,3)
if(Vencida==TRUE){
return(x2)
} else{
x3 <- x2*(1+i)
round(x3,3)
return(x3)
}
}
anualidad <- function(n,i,P=1,Vencida=TRUE){
s <- 0
for(j in 1:n){
x1 <- ((1/(1+i))^j)
s <- x1+s
}
x2 <- P*s
round(x2,3)
if(Vencida==TRUE){
return(x2)
} else{
x3 <- x2*(1+i)
round(x3,3)
return(x3)
}
anualidad <- function(n,i,P=1,Vencida=TRUE){
s <- 0
for(j in 1:n){
x1 <- ((1/(1+i))^j)
s <- x1+s
}
x2 <- P*s
round(x2,3)
if(Vencida==TRUE){
return(x2)
} else{
x3 <- x2*(1+i)
round(x3,3)
return(x3)
}
}
}
anualidad(n = 15, i = 0.035, P = 5000, Vencida = FALSE)
cuadratica  <- function(a,b,c){
if(((b^2)-4*a*c)>0){
x1 <- (-b+sqrt((b^2)-4*a*c))/(2*a)
x2 <- (-b-sqrt((b^2)-4*a*c))/(2*a)
return(c(x1,x2))
} else if(((b^2)-4*a*c)==0){
x1 <- (-b/(2*a))
x2 <- (-b/(2*a))
return(c(x1,x2))
} else
print("No existe solucion en los reales")
}
anualidad <- function(n,i,P=1,Vencida=TRUE){
s <- 0
for(j in 1:n){
x1 <- ((1/(1+i))^j)
s <- x1+s
}
x2 <- P*s
round(x2,3)
if(Vencida==TRUE){
return(x2)
} else{
x3 <- x2*(1+i)
return(x3)
}
}
anualidad(n = 15, i = 0.035, P = 5000, Vencida = FALSE)
cuadratica <- function(x) {
3 * x ^ 2 - 1 * x - 2
}
plot(cuadratica,
from = -2, to = 2,
xlab = "x", ylab = "f(x)",
n = 100,
col = "blue",
main = expression(paste("Gráfica de la función ",
3 * x ^ 2 - 1 * x - 2,
" utilizando 'plot'")
)
)
plot(cuadratica,
+      from = -2, to = 2,
+      xlab = "x", ylab = "f(x)",
+      n = 100,
+      col = "blue",
+      main = expression(paste("Gráfica de la función ",
+                              3 * x ^ 2 - 1 * x - 2,
+                              " utilizando 'plot'")
+      )
+ )
plot(cuadratica,
from = -2, to = 2,
xlab = "x", ylab = "f(x)",
n = 5,
col = "blue",
main = expression(paste("Gráfica de la función ",
3 * x ^ 2 - 1 * x - 2,
" utilizando 'plot'")
)
)
curve(cuadratica,
from = -2, to = 2,
xlab = "x", ylab = "f(x)",
n = 100,
col = "red",
main = expression(paste("Gráfica de la función ",
3 * x ^ 2 - 1 * x - 2,
" utilizando 'curve'")
)
)
soluciones <- data.frame(x = c(- 2 / 3, 1),
y = c(0, 0),
etiqueta = c("sol. 1", "sol. 2"))
points(soluciones$x, soluciones$y, col = "blue")
text(soluciones$x, soluciones$y + 0.5 , soluciones$etiqueta)
library(datasets)
data(cars)
config.default <- par()
par(pch = 19, lty = "dashed")
config.default <- par() # Guardamos la configuración inicial.
# col y fg se superponen.
par(col = "blue", fg = "green", bg = gray(0.8))
plot(cars$speed, cars$dist)
plot(cars$speed, cars$dist, col = "blue")
plot(cars$speed, cars$dist, col = "blue", fg = "red")
boxplot(cars$speed)
par(config.default) # Establecemos la configuración inicial.
config.default <- par() # Guardamos la configuración inicial.
# col y fg se superponen.
par(col = "blue", fg = "green", bg = gray(0.8))
plot(cars$speed, cars$dist)
plot(cars$speed, cars$dist, col = "blue")
plot(cars$speed, cars$dist, col = "blue", fg = "red")
boxplot(cars$speed)
par(config.default) # Establecemos la configuración inicial.
config.default <- par() # Guardamos la configuración inicial.
# col y fg se superponen.
par(col = "blue", fg = "green", bg = gray(0.8))
plot(cars$speed, cars$dist)
plot(cars$speed, cars$dist, col = "blue")
plot(cars$speed, cars$dist, col = "blue", fg = "red")
boxplot(cars$speed)
anualidad <- function(n,i,P=1,Vencida=TRUE){
s <- 0
for(j in 1:n){
x1 <- ((1/(1+i))^j)
s <- x1+s
}
x2 <- P*s
round(x2,3)
if(Vencida==TRUE){
return(x2)
} else{
x3 <- x2*(1+i)
return(x3)
}
}
## Ejemplos
anualidad(n = 15, i = 0.035)
config.default <- par() # Guardamos la configuración inicial.
par(lty = "dotted", lwd = 2)
plot(cars$speed, cars$dist); abline(a = 0, b = 1)
par(lty = "dashed", lwd = 3)
plot(cars$speed, cars$dist); abline(a = 0, b = 1)
par(config.default) # Establecemos la configuración inicial.
config.default <- par() # Guardamos la configuración inicial.
par(lty = "dotted", lwd = 2)
plot(cars$speed, cars$dist); abline(a = 0, b = 1)
par(lty = "dashed", lwd = 3)
plot(cars$speed, cars$dist); abline(a = 0, b = 1)
par(config.default) # Establecemos la configuración inicial.
config.default <- par() # Guardamos la configuración inicial.
par(ps = 9, cex = 1.2)
plot(cars$speed, cars$dist); abline(a = 0, b = 1)
par(ps = 9, cex = 2)
plot(cars$speed, cars$dist); abline(a = 0, b = 1)
par(ps = 5, cex = 2)
plot(cars$speed, cars$dist); abline(a = 0, b = 1)
par(ps = 7, cex = 2)
plot(cars$speed, cars$dist); abline(a = 0, b = 1)
par(config.default)
config.default <- par() # Guardamos la configuración inicial.
par(ps = 9, cex = 1.2)
plot(cars$speed, cars$dist); abline(a = 0, b = 1)
par(ps = 9, cex = 2)
plot(cars$speed, cars$dist); abline(a = 0, b = 1)
par(ps = 5, cex = 2)
plot(cars$speed, cars$dist); abline(a = 0, b = 1)
par(ps = 7, cex = 2)
plot(cars$speed, cars$dist); abline(a = 0, b = 1)
config.default <- par() # Guardamos la configuración inicial.
par(family = "Calibri", font = 2)
plot(cars$speed, cars$dist, pch = "X", main = "Calibri y bold (sólo puntos)")
par(family = "serif", font = 3)
plot(cars$speed, cars$dist, pch = "X", main = "serif y italic (sólo puntos)")
par(config.default)
config.default <- par() # Guardamos la configuración inicial.
x <- -5:5
y <- -x ^ 2 + 25
par(pch = 1); plot(x, y)
par(pch = 19); plot(x, y)
# Del 21 al 25 puede especificarse la línea y el borde del símbolo.
par(pch = 21); plot(x, y, bg = "blue", col = "red")
# Con caracteres.
par(pch = "a"); plot(x, y)
par(pch = "@"); plot(x, y)
par(config.default)
config.default <- par() # Guardamos la configuración inicial.
x <- -5:5
y <- -x ^ 2 + 25
par(config.default) # Establecemos la configuración inicial.
plot(x, y)
par(mar = c(0,0,0,0)); plot(x, y) # Eliminamos los márgenes de la figura.
par(config.default) # Establecemos la configuración inicial.
plot(x, y)
par(pin = c(9, 4.5)); plot(x, y) # Cambiamos el ancho y altura de la región gráfica.
par(config.default) # Establecemos la configuración inicial.
plot(x, y)
par(oma = c(1, 1, 1, 1)); plot(x, y)
config.default <- par() # Guardamos la configuración inicial.
x <- -5:5
y <- -x ^ 2 + 25
par(config.default) # Establecemos la configuración inicial.
plot(x, y)
par(mar = c(0,0,0,0)); plot(x, y) # Eliminamos los márgenes de la figura.
par(config.default) # Establecemos la configuración inicial.
plot(x, y)
par(pin = c(9, 4.5)); plot(x, y) # Cambiamos el ancho y altura de la región gráfica.
par(config.default) # Establecemos la configuración inicial.
plot(x, y)
par(oma = c(1, 1, 1, 1)); plot(x, y)
?plotmath
?trianle.plot
?triangle.plot
install.packages("ade4 ")
2+5
5*4
tipo.archivo <- system("file -I ./DATOS/CPdescarga.txt", intern = TRUE)
inicio.encoding <- regexpr("charset=.*", tipo.archivo)
archivo.encoding <- gsub("charset=",
"",
substr(tipo.archivo, inicio.encoding, nchar(tipo.archivo))
)
```
setwd("/Users/jcdf_resident/Documents/ITAM/Estadistica Aplicada I/Tareas/Tarea 3")
getwd
getwd()
tipo.archivo <- system("CONAPO.txt", intern = TRUE)
inicio.encoding <- regexpr("charset=.*", tipo.archivo)
archivo.encoding <- gsub("charset=",
"",
substr(tipo.archivo, inicio.encoding, nchar(tipo.archivo))
)
```
tipo.archivo <- system("file -I CONAPO.txt", intern = TRUE)
inicio.encoding <- regexpr("charset=.*", tipo.archivo)
archivo.encoding <- gsub("charset=",
"",
substr(tipo.archivo, inicio.encoding, nchar(tipo.archivo))
)
?read.table
CONAPO <- read.table("CONAPO.txt", header = TRUE, sep = "@", stringsAsFactors = FALSE, fileEncoding = "utf-8",
encoding = "utf-8", text = plain)
CONAPO <- read.table("CONAPO.txt", header = TRUE, sep = "@", stringsAsFactors = FALSE, fileEncoding = "utf-8")
str(CONAPO)
CONAPO <- read.table("CONAPO.txt", header = TRUE, sep = "@", stringsAsFactors = FALSE)
str(CONAPO)
CONAPO <- read.table("CONAPO.txt", header = TRUE, sep = "@", stringsAsFactors = FALSE, fileEncoding = "utf-8")
CONAPO <- read.table("CONAPO.txt", header = TRUE, sep = "@", stringsAsFactors = FALSE, encoding = "utf-8")
str(CONAPO)
CONAPO <- read.table("CONAPO.txt", header = TRUE, sep = "@", stringsAsFactors = FALSE, fileEncoding = "utf-8")
CONAPO <- read.table("CONAPO.txt", header = TRUE, sep = "@", stringsAsFactors = FALSE, "w:UTF-8")
CONAPO <- read.table("CONAPO.txt", header = TRUE, sep = "@", stringsAsFactors = FALSE)
open("CONAPO.txt", "w:UTF-8")
CONAPO <- read.table("CONAPO.txt", header = TRUE, sep = "@", stringsAsFactors = FALSE, fileEncoding="UTF-8")
CONAPO <- read.table("CONAPO.txt", header = TRUE, sep = "@", stringsAsFactors = FALSE, encoding="latin1")
str(CONAPO)
CONAPO <- read.table("CONAPO.txt", header = TRUE, sep = "@", stringsAsFactors = FALSE, fileEncoding ="UTF-8")
str(CONAPO)
```
####Pregunta 14
```{r}
options(digits = 14)
par(mfrow = c(4, 8), mar = c(0, 0, 1, 0), oma = c(0, 0, 1.2, 0))
entidades <- c('Aguascalientes', 'Baja California', 'Baja California Sur', 'Campeche', 'Chiapas', 'Chihuahua', 'Coahuila', 'Colima', 'Distrito Federal', 'Durango', 'Guanajuato', 'Guerrero', 'Hidalgo', 'Jalisco', 'México', 'Michoacán', 'Morelos', 'Nayarit', 'Nuevo León', 'Oaxaca', 'Puebla', 'Querétaro', 'Quintana Roo', 'San Luis Potosí', 'Sinaloa', 'Sonora', 'Tabasco', 'Tamaulipas', 'Tlaxcala', 'Veracruz', 'Yucatán', 'Zacatecas')
for(i in 1:32){
with(CONAPO, plot(0, 0, type = "n", xlim = c(-8.7, 8.7), ylim = c(0, 17), xlab ="", ylab = "", axes = FALSE, bty="n", cex.main = 0.8, main = entidades[i]))
H <- subset(CONAPO[,5],(CONAPO[,3] == "Hombres") & (CONAPO[,1] == 1997) & (CONAPO[,2] == entidades[i]))
M <- subset(CONAPO[,5],(CONAPO[,3] == "Mujeres") & (CONAPO[,1] == 1997) & (CONAPO[,2] == entidades[i]))
for(j in 1:17){
rect(0, j-1, -H[j], j , col = "blue", border = "white")
rect(0, j-1, M[j], j , col = "red", border = "white")
}
}
mtext(paste0(1993, " (Hombres, Mujeres)"), side = 3, outer = TRUE)
```
?read.table
text("año")
text(0,0, "año")
text
