colSums(x)
rowSums(x)
dim(iris)
colSums(iris)
.colSums(iris, 150, 4, na.rm = FALSE)
.colSums(iris, 150, 5, na.rm = FALSE)
class(as.numeric(iris))
names(iris)
colSums (iris, na.rm = FALSE, dims = 1)
?colsum
?sapply
lapply(iris)
class(iris)
?FUN
x <- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))
x
lapply(x, mean)
sapply(x, quantile)
?sum
sum(iris)
iris
sum(Sepal.Length)
?class
class(iris)
data.matrix(iris)
ColSums(iris)
colSums(iris)
colSums(data.matrix(iris))
colMeans(data.matrix(iris))
class(data.matrix(iris))
vmv<-c(1:6,NA,NA,9:12)
x <- c(1:6,NA,NA,9;12)
x <- c(1:6,NA,NA,9:12)
x
is.na(x)
which(is.na(x))
sum(iris$Sepal.Length)
is.na(iris)
attributes(iris)
cars
x <- matrix(1:4, 4, 7)
x
?matrix
iris[,sapply(iris,is.numeric)]
iris[sapply(iris,is.numeric)]
iris[-Species]
ris[sapply(iris,is.character)]
iris[sapply(iris,is.character)]
iris[sapply(iris,is.factor)]
?sapply
iris[,-5]
colSums(iris)
colSums(iris[-5])
queck
library(datasets)
data(iris)
?iris
str(iris)
class(iris[1])
class(iris[2])
class(iris[,-5])
?str
ls.str(iris)
class(iris[1:4])
is.na(iris[1])
is.na(iris)
which(is.na(iris[1]))
which(is.na(iris))
sum(is.na(iris))
getwd()
setwd("/Users/jcdf_resident/Documents/ITAM/Estadistica Aplicada I/Tareas")
getwd()
colSums(iris[,-5])
mean?
mean()
colMean?
mean
?colMean
?colMeans
colMeans(iris[,-5])
?mean
c(sum(iris[1]), mean(iris[1])
b
c(sum(iris[1]), mean(iris[1]))
c(sum(iris[1]), mean(iris[1], na.rm = FALSE))
mean(iris)
mean(iris[,-5])
sapply(iris, mean)
x  <- (sum(iris[1]),sum(iris[2]),sum(iris[3]),sum(iris[4]))
x <- c(sum(iris[1]),sum(iris[2]),sum(iris[3]),sum(iris[4]))
names(x) <- c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width")
x
which(iris[1]>=5.84)
iris
if(iris[1]>=5.84){}
colSums(iris[1]>=5.84)
sum(iris[1]>=5.84)
x1 <- c(iris[1]>=5.84)
x1
if(x1==T){sum(iris[1])}
?colSums
colSums(iris[,-5]>=5.84)
?if
?if
?if()
sum(iris[iris>=5.54])
sum(iris[1][iris[1]>=5.84])
mean(iris[1])
sapply(iris[1], mean)
sapply(iris[1]>=5.84, mean)
sapply(iris[1][iris[1]>=5.84], mean)
mean(iris[1][iris[1]>=5.84])
mean(iris[1])
mean(iris[1])
mean(iris[1][iris[1]>=0])
mean(iris$Sepal.Length)
mean(iris$Sepal.Length[iris$Sepal.Length>=5.84])
?subset
subset(iris[1])
subset(iris[1], Species = "setosa", iris[1]>5.4)
subset(iris[1], iris$Species = "setosa", iris[1]>5.4)
subset(iris[1], iris[5]$Species = "setosa", iris[1]>5.4)
subset(iris[1], iris[5] = "setosa", iris[1]>5.4)
subset(iris[1], iris[5] == "setosa", iris[1]>5.4)
?subset
subset(iris[1], Species== "setosa" & iris[1]>5.4)
subset(iris[1], Species== "setosa")
subset(iris[1], iris[5] == "setosa")
subset(iris[1], iris[5] == "setosa" & iris[1]>5.4)
subset(iris[1], Species == "setosa" & iris[1]>5.4)
subset(Sepal.Length, Species == "setosa" & iris[1]>5.4)
subset(iris, Species == "setosa" & iris[1]>5.4)
subset(iris, Species == "setosa" & iris[1]>5.4, select=-Sepal.Width, select=-Petal.Length, select=-Petal.Width, select=-Species)
subset(iris, Species == "setosa" & iris[1]>5.4, select=-Sepal.Width)
subset(iris, Species == "setosa" & iris[1]>5.4, select=-c(Sepal.Width,Petal.Length))
subset(iris, Species == "setosa" & iris[1]>5.4, select=-c(Sepal.Width,Petal.Length,Petal.Width,Species))
?%in %
subset(iris, Species == "setosa" & iris[1]>5.4 %in% Species=="virginica", select=-c(Sepal.Width,Petal.Length,Petal.Width,Species))
y <- subset(iris, Species == "setosa" & iris[1]>5.4, select=-c(Sepal.Width,Petal.Length,Petal.Width,Species))
y
y %in% Species == "virginica"
y %in% iris[5] == "virginica"
iris[1][y %in% Species == "virginica"]
iris[y %in% Species == "virginica"]
y <- subset(iris, Species == "setosa" & iris[1]>5.4, select=-c(Sepal.Width,Petal.Length,Petal.Width))
y
iris[y %in% Species =="virginica"]
y[y %in% Species == "virginica"]
subset(iris, Species == "setosa" & iris[1]>5.4 & Species == "virginica", select=-c(Sepal.Width,Petal.Length,Petal.Width,Species))
subset(iris, (Species == "setosa" | Species == "virginica") & iris[1]>5.4, select=-c(Sepal.Width,Petal.Length,Petal.Width,Species))
iris
subset(iris,(!iris[5] %in% iris[5] == "versicolor" )& iris[1]>5.4)
subset(iris,(!Species %in% Species == "versicolor" ) & iris[1]>5.4, select=-Sepal.Width, select=-Petal.Length, select=-Petal.Width, select=-Species)
subset(iris, (!Species %in% Species == "versicolor" ) & iris[1]>5.4, select=-c(Sepal.Width,Petal.Length,Petal.Width))
subset(iris, (Species %in% Species == "versicolor" ) & iris[1]>5.4, select=-c(Sepal.Width,Petal.Length,Petal.Width))
subset(iris, (!iris %in% Species == "versicolor" ) & iris[1]>5.4, select=-c(Sepal.Width,Petal.Length,Petal.Width))
subset(iris, !(iris %in% Species == "versicolor" ) & iris[1]>5.4, select=-c(Sepal.Width,Petal.Length,Petal.Width))
subset(iris, !(Species %in% Species == "versicolor" ) & iris[1]>5.4, select=-c(Sepal.Width,Petal.Length,Petal.Width))
z <- subset(iris, !(Species %in% Species == "versicolor" ) & iris[1]>5.4, select=-c(Sepal.Width,Petal.Length,Petal.Width))
subset(z, Species == "virginica" | Species == "setosa", select=Sepal.Length)
sapply[iris[,-5],sum]
sapply[iris[,-5],max]
sapply(iris[,-5],max)
sapply(iris[,-5],mean)
sapply(iris[,-5],sum)
head(subset(iris, Species %in% c("virginica")))
set.seed(20140825); quartz()
> plot(runif(1000))
set.seed(20140825); quartz()
plot(runif(1000))
set.seed(20140825); x <- rnorm(10000); getwd()
pdf(file = "Gráfica01.pdf")
hist(x, 100, col = "seagreen2", border = "white")
abline(v = mean(x), col = "royalblue4", lwd = 3)
abline(v = quantile(x, c(0.25, 0.75)), col = "red4", lwd = 3)
dev.off()
hist(x, 100, col = "seagreen2", border = "white")
abline(v = mean(x), col = "royalblue4", lwd = 3)
abline(v = quantile(x, c(0.25, 0.75)), col = "red4", lwd = 3)
?library
library(datasets)
data(iris)
?iris
str(iris)
class(iris[[1]])
class(iris[[1]])
class(iris[[1]])
class(iris[[2]])
class(iris[[3]])
class(iris[[4]])
class(iris[[5]])
sapply(iris[5], class)
sapply(iris[4], class)
sapply(c(iris[1],iris[2],iris[3],iris[4],iris[5]), class)
sum(is.na(iris))
colSums(!c(iris[5]))
colSums(c(iris[1]))
colSums(iris(,-5))
colSums(iris[,-5])
colMeans(iris[,-5])
sapply(iris[,-5], sum)
sapply(iris[,-5], mean)
which(Sepal.Length>=5.84)
which(iris[1]>=5.84)
iris
colSums(iris[1]>=5.84)
colSums(iris[1][iris[1]>=5.84])
sum(iris[1][iris[1]>=5.84])
mean(iris[1][iris[1]>=5.84])
subset(iris, Species == "setosa" & iris[1]>5.4)
subset(iris, Species == "setosa" & iris[1]>5.4, select=Sepal.Length)
which(subset(iris, Species == "setosa" & iris[1]>5.4, select=Sepal.Length))
x <- subset(iris, Species == "setosa" & iris[1]>5.4, select=Sepal.Length)
which(x>5.4)
which((iris[1]>5.4) & iris[5]=="setosa")
?head
subset(iris, Species %in% c("virginica"))
head(subset(iris, Species %in% c("virginica")))
subset(iris, (Species %in% c("virginica","setosa")) & iris[1]>5.4, select=Sepal.Length)
write.table(tail(iris),file = "UltimasObs.csv", sep = ",")
write.table(tail(iris),file = "UltimasObs.csv", sep = ",", row.names = FALSE)
sumar.dos.numeros <- function(sumando.1, sumando.2) {
return(sumando.1 + sumando.2)
}
sumar.dos.numeros(2,2)
cuadratica <- function(a,b,c){}
cuadratica <- function(a,b,c){+
if(((b^2)-4*a*c)>0){}
}
?if
if(cond)
if(T){}
if(T){}
if (T){}
cuadratica <- function(a, b, c{́odigo ...}
cuadratica  <- function(a,b,c)+
}
cuadratica  <- function(a,b,c){+}
cuadratica  <- function(a,b,c){+}
cuadratica  <- function(a,b,c){
if(((b^2)-4*a*c)>0){
x1 <- (-b+sqrt((b^2)-4*a*c))/(2*a)
x2 <- (-b-sqrt((b^2)-4*a*c))/(2*a)
} else if(((b^2)-4*a*c)=0){
x1 <- (-b/(2*a))
x2 <- (-b/(2*a))
} else
print("No existe solución en los reales")
}
cuadratica  <- function(a,b,c){
if(((b^2)-4*a*c)>0){
x1 <- (-b+sqrt((b^2)-4*a*c))/(2*a)
x2 <- (-b-sqrt((b^2)-4*a*c))/(2*a)
} else if(((b^2)-4*a*c)==0){
x1 <- (-b/(2*a))
x2 <- (-b/(2*a))
} else
print("No existe solución en los reales")
}
cuadratica(1,1,1)
cuadratica  <- function(a,b,c){
if(((b^2)-4*a*c)>0){
x1 <- (-b+sqrt((b^2)-4*a*c))/(2*a)
x2 <- (-b-sqrt((b^2)-4*a*c))/(2*a)
} else if(((b^2)-4*a*c)==0){
x1 <- (-b/(2*a))
x2 <- (-b/(2*a))
} else
print("No existe soluci??n en los reales")
}
cuadratica(1,1,1)
cuadratica  <- function(a,b,c){
if(((b^2)-4*a*c)>0){
x1 <- (-b+sqrt((b^2)-4*a*c))/(2*a)
x2 <- (-b-sqrt((b^2)-4*a*c))/(2*a)
} else if(((b^2)-4*a*c)==0){
x1 <- (-b/(2*a))
x2 <- (-b/(2*a))
} else
print("No existe solución en los reales")
}
cuadratica(1,1,1)
cuadratica  <- function(a,b,c){
if(((b^2)-4*a*c)>0){
x1 <- (-b+sqrt((b^2)-4*a*c))/(2*a)
x2 <- (-b-sqrt((b^2)-4*a*c))/(2*a)
} else if(((b^2)-4*a*c)==0){
x1 <- (-b/(2*a))
x2 <- (-b/(2*a))
} else
print("No existe solucion en los reales")
}
cuadratica(1,1,1)
cuadratica(3,-1,-2)
cuadratica  <- function(a,b,c){
if(((b^2)-4*a*c)>0){
x1 <- (-b+sqrt((b^2)-4*a*c))/(2*a)
x2 <- (-b-sqrt((b^2)-4*a*c))/(2*a)
return x1
return x2
} else if(((b^2)-4*a*c)==0){
x1 <- (-b/(2*a))
x2 <- (-b/(2*a))
return x1
return x2
} else
print("No existe solucion en los reales")
}
cuadratica  <- function(a,b,c){
if(((b^2)-4*a*c)>0){
x1 <- (-b+sqrt((b^2)-4*a*c))/(2*a)
x2 <- (-b-sqrt((b^2)-4*a*c))/(2*a)
return (x1)
return (x2)
} else if(((b^2)-4*a*c)==0){
x1 <- (-b/(2*a))
x2 <- (-b/(2*a))
return (x1)
return (x2)
} else
print("No existe solucion en los reales")
}
cuadratica(3,-1,-2)
cuadratica(9,12,-4)
cuadratica  <- function(a,b,c){
if(((b^2)-4*a*c)>0){
x1 <- (-b+sqrt((b^2)-4*a*c))/(2*a)
x2 <- (-b-sqrt((b^2)-4*a*c))/(2*a)
return(c(x1,x2))
} else if(((b^2)-4*a*c)==0){
x1 <- (-b/(2*a))
x2 <- (-b/(2*a))
return(c(x1,x2))
} else
print("No existe solucion en los reales")
}
cuadratica(3,-1,-2)
cuadratica(9,12,4)
cuadratica(0,1,1)
?cat
anualidad <- function(n,i,P=1,Vencida=TRUE){
j <- 1
s <- 0
for(j<=n){
x1 <- ((1/(1+i))^j)
s <- x1+s
j <- j+1
}
x2 <- P*s
if(Vencida==TRUE){
return x2
} else{
x3 <- x2*(1+i)
return x3
}
}
anualidad <- function(n,i,P=1,Vencida=TRUE){
j <- 1
s <- 0
for(j in j<=n){
x1 <- ((1/(1+i))^j)
s <- x1+s
j <- j+1
}
x2 <- P*s
if(Vencida==TRUE){
return x2
} else{
x3 <- x2*(1+i)
return x3
}
}
anualidad <- function(n,i,P=1,Vencida=TRUE){
j <- 1
s <- 0
for(j in j<=n){
x1 <- ((1/(1+i))^j)
s <- x1+s
j <- j+1
}
x2 <- P*s
if(Vencida==TRUE){
return x2
} else{
x2 <- x2*(1+i)
return x2
}
}
anualidad <- function(n,i,P=1,Vencida=TRUE){
j <- 1
s <- 0
for(j in j<=n){
x1 <- ((1/(1+i))^j)
s <- x1+s
j <- j+1
}
x2 <- P*s
if(Vencida==TRUE){
return x2
} else{
x3 <- x2*(1+i)
return x3
}
}
anualidad <- function(n,i,P=1,Vencida=TRUE){
j <- 1
s <- 0
for(j in j<=n){
x1 <- ((1/(1+i))^j)
s <- x1+s
j <- j+1
}
x2 <- P*s
if(Vencida==TRUE){
return(x2)
} else{
x3 <- x2*(1+i)
return(x3)
}
}
anualidad(15,.35)
anualidad(n = 15, i = 0.035)
anualidad(n = 15, i = 0.035, P = 5000)
anualidad(n = 15, i = 0.035, P = 5000, Vencida = FALSE)
anualidad(n = 15, i = 0.035, P = 5000, Vencida = FALSE)
anualidad <- function(n,i,P=1,Vencida=TRUE){
s <- 0
for(j in j<=n){
x1 <- ((1/(1+i))^j)
s <- x1+s
j <- j+1
}
x2 <- P*s
if(Vencida==TRUE){
return(x2)
} else{
x3 <- x2*(1+i)
return(x3)
}
}
anualidad(n = 15, i = 0.035)
anualidad <- function(n,i,P=1,Vencida=TRUE){
j <- 1
s <- 0
for(j in j<=n){
x1 <- ((1/(1+i))^j)
s <- x1+s
j <- j+1
}
x2 <- P*s
if(Vencida==TRUE){
return(x2)
} else{
x3 <- x2*(1+i)
return(x3)
}
}
anualidad(n = 15, i = 0.035)
anualidad(1,1)
anualidad(2,1)
anualidad(n=2,i=1)
anualidad <- function(n,i,P=1,Vencida=TRUE){
j <- 1
s <- 0
for(j in j<=n){
x1 <- ((1/(1+i))^j)
s <- x1+s
}
x2 <- P*s
if(Vencida==TRUE){
return(x2)
} else{
x3 <- x2*(1+i)
return(x3)
}
}
anualidad(2,1)
anualidad <- function(n,i,P=1,Vencida=TRUE){
s <- 0
for(j in 1:n){
x1 <- ((1/(1+i))^j)
t <- x1+s
}
x2 <- P*s
if(Vencida==TRUE){
return(x2)
} else{
x3 <- x2*(1+i)
return(x3)
}
}
anualidad(2,1)
anualidad(1,1)
anualidad <- function(n,i,P=1,Vencida=TRUE){
s <- 0
for(j in 1:n){
x1 <- ((1/(1+i))^j)
s <- x1+s
}
x2 <- P*s
if(Vencida==TRUE){
return(x2)
} else{
x3 <- x2*(1+i)
return(x3)
}
}
anualidad(1,1)
anualidad(2,1)
anualidad(n = 15, i = 0.035)
anualidad(n = 15, i = 0.035, P = 5000)
anualidad(n = 15, i = 0.035, P = 5000, Vencida = FALSE)
